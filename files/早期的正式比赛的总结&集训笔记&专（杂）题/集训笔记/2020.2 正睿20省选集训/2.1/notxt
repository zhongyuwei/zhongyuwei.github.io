## bitset暴力$D$维数点问题

### 0

用bitset处理出$f_{i,k}$，表示第$i$维上的坐标不超过$k$的点集。

查询的时候与一下就可以。

时间复杂度$O(D (n+q)({n\over w}))$。

空间复杂度$O({Dn^2\over w})$

### 1

考虑优化空间，取一个阈值，然后只处理$f_{i,k'T}$。查询的时候暴力块内的。

空间复杂度$O({Dn^2\over wT})$，时间复杂度$O(Dn{n\over wT}+q({n\over w} + T))$。

## 支持加点的动态凸包

## CF848C

## UOJ50 链式反应

$$
f'(n) = f^2(x)p(x) + 1
$$

分治FFT

## 二项堆（斐波那契堆）

## UOJ unknown

### 1

二进制分组（或者是线段树）

如果某一层的$x$的这个块加满了，就把它前面的那个块build了。

[参考](https://www.cnblogs.com/cjoieryl/p/10254552.html)

### 2

另一个想法是，给每个点随机一个权值，如果一个点的权值小于它前面的那个点就把它们两个合并。复杂度证明类似treap。

### 3

这个题提示我们可以把一些树上问题转化成序列问题。

## 整体二分

通过二分将 max 转化成 范围内是否存在合法解。

## CF321E

$O(n^2)$做法：$opt(i,k)$表示决策点，则$opt(i,k-1) \le opt(i,k) \le opt(i+1,k)$。外层枚举$k$，然后倒序枚举$i$。复杂度$O(n^2)$（注意不是$O(nk)$）。

## NOI2009 诗人小G

二分 + 单调栈可以在线做决策单调性
而分治做决策单调性只能离线

## IOI2003 wombats

[link](http://www.ioi2013.org/wp-content/uploads/tasks/day1/wombats/wombats.pdf)

对行开线段树，每个节点维护最左行的每个点到最右行的每个点的最短路。

注意到，合并两个区间的时候，转移具有决策单调性，合并的复杂度可以优化到$O(c^2\log c)$。

## IOI2014 holiday

[link](http://uoj.ac/problem/29)

对于每个$l$，最优的$r$的是单调的。

证明：

设某个区间$[l,r]$的答案为$w(l,r)$。

考虑反证，设$l$的最优右端点为$r$，$l+1$的最优右端点为$r'$，且$r' < r$。

那么我们有：

$$
w(l,r) >w(l,r')\\
w(l+1,r') > w(l+1,r)
$$

两式相加得到

$$
w(l,r) + w(l+1,r') > w(l,r') + w(l+1,r)
$$

即

$$
w(l,r) - w(l,r') > w(l+1,r) - w(l+1,r')
$$

显然是不成立的，因为上述式子的意义实际上是将$(r',r]$的元素加入$[l,r']$或者$[l+1,r']$，带来的额外的贡献。由于加入的元素是相同的，而$[l,r']$它可以去玩的天数更少，所以

$$
w(l,r) - w(l,r') \le w(l+1,r) - w(l+1,r')
$$

## 带权二分

首先求出这张图的最小生成树$T_0$。设$w(T)$表示树$T$的边权和。

设$T_k$表示我们让$T_0$中的白边数量增加$k$，得到的最小生成树。那么$T_{k}$一定是由$T_{k-1}$加一条白边、删一条黑边得到的（如果不是则一定可以通过调整使其满足，证明方法与Kruskal类似）。所以显然会有$w(T_{k}) - w(T_{k-1}) \le w(T_{k+1})- w(T_{k})$（否则的话，你可以在$T_{k-1}$上进行$T_{k}\to T_{k+1}$，得到一个更优的$T_k$）。

对于$k$小于$T_0$中的白边数的也可以类似证明。

拟阵？

> dls说，两个拟阵，一个是图拟阵（所有无环的边集），另一个是白边数不超过$k$的拟阵，对它们求拟阵交，证完了。:anger:

## IOI2000 邮局

方案构造：求出答案最优的情况下，需要划分的段数最少（红色）和段数最多（蓝色）的方案。

![0.png](https://i.loli.net/2020/02/01/aPLUqSmWyVjO5oB.png)

![1.png](https://i.loli.net/2020/02/01/PKU1A6fZBGbeyX4.png)

由于1+3小于等于2+4，所以1，3也一定在最短路上。下图中的12345和abcdef都是最短路。

![2.png](https://i.loli.net/2020/02/01/D3kGdKRLvBNeOTw.png)

环上的版本（[参考](https://blog.csdn.net/qq_39972971/article/details/82733716)）：

![3.jpg](https://i.loli.net/2020/02/01/lIzijMV59wAxCdt.jpg)

由于在环上，决策单调性仍然满足，所以最优解的决策点划分出来的那些线段中，每一段中的点只会转移到下一段中的点。

为什么是$N\log^2 N$：因为首先要对起点进行一次分治（因为要求起点终点一样），然后需要分治求选择的起点的最优方案。

## 循环同构编辑距离 circular edit distance

相当于求从$(0,j)$转移到$(n,j+m)$的最短路路径。

广义决策单调性（每次把矩阵中的点分成两个部分，进行分治）

## 凸包上选$k$个点，求最大面积

随机${n\over k}\log n$次起点，每次$O(nk\log n)$跑dp。

确定性算法：与前面邮局的环上版本是一样的。