## 杂七杂八

验证形式幂级数的正确性：https://rqy.moe/Math/gf_correct/

EGF 与 OGF 的转化：$e^{kx} \Leftrightarrow \frac{1}{1-kz}$

另一个我没见过的封闭形式：$\frac{1}{(1-z)^c} = (1-z)^{-c} = \sum_{i\ge 0} \binom{c+i-1}{i} z^i$

牛顿迭代中（令 $x$ 为一个形式幂级数，即一个关于 $z$ 的多项式），$F'(x)$ 应指的是 $\frac{d}{dx} F(x)$，$z$ 应该被当作常数项。

多项式求逆的牛顿迭代推导的式子的选择：我们得让搞出来的式子没有除法！所以选择了 $F(x) = \frac{1}{x} - A(z) = 0$。

## 多项式欧几里得

多项式欧几里得，即求 $\gcd(A(z), B(z))$：不停地用高次地对低次的取模，直到其中一个多项式变成 $0$，返回另一个多项式。由于暴力取模的复杂度是 $O(m(n-m))$，所以暴力取模的多项式欧几里得的复杂度为 $O(nm)$。$\gcd(A(z),B(z))$ 的实际意义是一个次数最高且为 $A(z),B(z)$ 的因式的首一多项式。

## UOJ50 链式反应

解微分方程 $F'(z) = \frac{1}{2} A(z) F^2(z) + 1$。只需要算出 $F(z) \bmod z^n$。

[solution by 大米饼](https://www.cnblogs.com/Paul-Guderian/p/10487214.html)

下面考虑方程 $\frac{dx}{dz} = F(x)$，其中 $x$ 是一个形式幂级数（变量为 $z$）。$x_0$ 是 $\bmod z^n$ 的解，下面的运算在 $\bmod z^{2n}$ 的意义下考虑。

泰勒展开得：
$$
\frac{dx}{dz} = F(x_0) + F'(x_0)(x-x_0)
$$
将和 $x$ 有关的全部搞到左边去：
$$
\frac{dx}{dz} - F'(x_0)x = F(x_0) - F'(x_0)x_0
$$
令 $r = e^{\int - F'(x_0) dz}$，两边同时乘上 $r$ 得
$$
\frac{dx}{dz}r - F'(x_0)xr = F(x_0)r - F'(x_0)x_0r
$$
注意到 $\frac{dr}{dz} =-F'(x_0) r$，所以左边等于
$$
\frac{dx}{dz}r + \frac{dr}{dz} x = (xr)'
$$
右边没有变量，顺着算出来就可以了。

## 多项式多点求值相关

一个练习：求 $\prod_{1\le i < j \le n} (a_i - a_j)$

解法是，一边进行算出 $\prod_{j < i} (a_j - x)$ 的分治 FFT，一边进行多项式多点求值所需要的取模。

一个更加高效的多点求值解法：定义 $MULT(F(z),G(z))$ 为 $\sum_i z^i \sum_j f_{i+j}g_j$，则 $F(x_i) = MULT(F(z), \frac{1}{1-x_iz})$。类似分治，根节点传入 $MULT(F(z), \frac{1}{\prod_i (1-x_iz)})$，递归到$[l,mid]$ 的时候传入 $F_{[l,mid]} = MULT(F_[l,r], \prod_{i\in [mid+1,r]} (1-x_iz))$。传说中的 1s 5e5 算法。

## 拉格朗日反演

是 OI 中少数的可以直接从封闭形式得到某项系数的玩意。

结论：若 $F(x) = z$，则 $[z^n]H(x) = \frac{1}{n} [w^{-1}] H'(w) \cdot (\frac{1}{F(w)})^n$，或写作 $[z^n]H(x) = \frac{1}{n} [w^{n-1}] H'(w) \cdot (\frac{w}{F(w)})^n$。

证明：考虑令 $P = H(F(z))$，则 $H(G(F(z))) = H(z) = P(F(z))$，左右同时求导得到 $H'(z) = P'(F(z)) \cdot F(z)' = \sum_i (i+1)p_{i+1}F^i(z)F'(z)$，两边同时除以 $F^n(z)$ 得到：
$$
(\frac{1}{F(z)})^n H'(z) = \sum_i(i+1)p_{i+1} F^{i-n}(z) F'(z)
$$
考虑 $z^{-1}$ 的系数：右边，对于 $i\neq n-1$ 的项，由于 $F$ 的常数项为 $0$ 而 $F^{i-n}(z) F'(z) = \frac{(F^{i-n+1})'}{i-n+1}$，所以贡献为 $0$，而 $i=n-1$ 的项的贡献 $n\cdot p_n \cdot \frac{F'(z)}{F(z)}$ 可以经过一些分析得到 $[z^{-1}] \frac{F'(z)}{F(z)} = 1$。整理可得原式。

### 应用 1：k 叉树计数

答案的 OGF 满足 $F(z) = z (F(z) + 1)^k$，故 $F(z)$ 的复合逆为 $G(z) = \frac{z}{(z+1)^k}$ （因为 $\frac{F(z)}{(F(z)+1)^k} = z$）。

那么 $[x^n] F(z) = \frac{1}{n} [z^{n-1}] (\frac{z}{G(z)})^n = \frac{1}{n} [z^{n-1}] (z+1)^{kn} = \frac{1}{n} \binom{kn}{n-1}$，当 $k = 2$ 的时候为 $\frac{1}{n} \binom{2n}{n-1} = \frac{1}{n+1} \binom{2n}{n}$。

### 应用 2：二元生成函数相关

考虑在一种特殊的二元函数上做一个拉格朗日反演（式子的结果是一个关于 $u$ 的一元生成函数）：
$$
[z^n] \frac{1}{1-uF(z)} = \frac{1}{n} [w^{n-1}](\frac{1}{1-uw})' \cdot (\frac{w}{F^{-1}(w)})^n
$$
而 $\frac{d}{dw} (\frac{1}{1-uw}) = \sum_{i\ge 0} u^{i+1}(i+1) w^i$。

当 $F(z)$ 的复合逆存在的时候，这个式子可以在 $O(n\log n)$ 的时间内计算。

小应用：求 $[z^n]F(z), [z^n]F^2(z), \cdots [z^n]F^n(z)$。处理复合逆不存在的情况：

1. 常数项不存在：将 $F(x)$ 写作 $G(x) + c$
2. 一次项不为 $1$：提出一个系数
3. 最低次项不为一次项：开 $k$ 次根后，求 $1$ 到 $\frac{n}{k}$ 项。

## ZJOI2020 抽卡

仍然是考虑求出 $f_i$，表示抽出 $i$ 张卡之后仍然不存在连续的 $k$ 张连续的卡的方案数。

则 $\sum f_{n-i} u^i$ 就是 $[z^{n+1}] \frac{1}{1-u\frac{z(1-z^k)}{1-z}}$，其中 $uz$ 表示一个没有放卡的位置，而 $\frac{1-z^k}{1-z}$ 表示在一个没有放卡的位置之后可以放 $0$ 到 $k-1$ 个放了卡的位置。

只要求出 $F(x) = \frac{x(1-x^k)}{1-x}$ 的复合逆就可以直接算了。也就是要找一个 $G$，使得 $F(G(x)) = \frac{G(x)(1-G^k(x)}{1-G(x)} = x$，牛顿迭代求解 $G(x)$ 即可。

## TRIPWAYS

数据范围：$n\le 5000, m\le 10^5, q\le 500$。

设 $[x^n]F_i(x)$ 为第 $n$ 天停留在点 $i$ 的方案数，则 $F_i(x) = \frac{x \sum_{(j,i)\in E} F_j(x)}{1-L_ix}$。

则$F_n(x)$ 可以表示成 $\frac{P(x)}{Q(x)}$ 的形式，其中 $deg(P(x)) < n, Q(x) = \prod_i (1-L_ix)$（$deg(P(x)) < n$ 可以先把所有的式子都用分母为 $Q(x)$ 的分式表示，然后每走一步分子的次数 + 1 而所在城市的编号至少 +1）。我们可以先求出 $P(x), Q(x)$（求出 $F_n(x)$ 的前 $n$ 项系数以及 $Q(x)$ 然后算出 $P(x)$）。

注意到 $F_n(x)$ 是个 $n$ 阶的线性递推，但是直接算是 $O(q n \log n \log D)$ 的，无法通过。

根据有理生成函数的一般展开定理（？），设 $\{L_i\}$ 中，$p_i$ 出现了 $r_i$ 次，一定可以把 $F_n(x)$ 表示成 $\sum_i \sum_{j=1}^{r_i} \frac{a_{i,j}}{(1-p_ix)^j}$。则 $[x^D] F(x) = \sum_i \sum_{j=1}^{r_i} a_{i,j} \binom{D+j-1}{j-1} p_i^D$。

做法 1：令 $R_i(x) = \prod_{j\neq i} (1-p_jx)^{r_j}$，则 $P(x) = \sum_i \sum_{j = 1}^{r_i} a_{i,j}R_i(x) (1-p_ix)^{r_i-j}$，带入 $x = \frac{1}{p_i}$ 得到 $a_{i,r_i} \prod_{j\neq i}(1-\frac{p_j}{p_i})^{r_j}$ ，可以解出 $a_{i,r_i}$。将 $P(x)$ 减去 $a_{i,r_i}$ 对应的项，将剩下的部分全部除以一个 $(1-p_ix)$，就可以让 $r_i$ 减去 $1$。

做法 2：令 $G_i(x) = P(x) \bmod{((1-p_ix)^{r_i})} = R_i(x) \cdot \sum_{j=1}^{r_i} a_{i,j} (1-p_ix)^{r_i-j} \bmod((1-p_ix)^{r_i})$。分治求出 $G_i(x)$，然后对 $G_i(x), R_i(x)$ 做个变换，将其表示为 $\sum_i coe_i \cdot (1-p_ix)^i$ 的形式，然后直接多项式求逆即可。

## 一个白嫖的问题

$$
\sum_{i=0}^n i^jk^i\\
= j! \sum_{i=0}^n [x^j]e^{ix} k^i\\
= j! [x^j] \frac{e^{x(n+1)}k^{(n+1)}-1}{e^xk-1}
$$

将 $F(x)$ 的系数翻转，则我们要求的就是
$$
[x^n] \frac{e^{x(n+1)}k^{(n+1)}-1}{e^xk-1} F(x)
$$
先算出 $\frac{F(x)}{e^xk-1}$ 各项的系数，然后将它与左边的分子卷积，得到一个关于 $(n+1)$ 的多项式，最后对询问进行多项式多点求值即可。

## LOJ6728 U 群把妹王

考虑容斥。给大小为 $p$ 的集合规定系数为 $a_p$，我们希望 $a_p$ 满足：
$$
\exp(\sum_{i\ge 0} a_p\frac{x^i}{i!}) = 1 + \sum_{i\in S} \frac{x^i}{i!}
$$
因为这样，任何存在某个集合其大小不在 $S$ 中的集合划分都会被数 $0$ 次。

记 $F(x) = \sum_{i\in S} \frac{x^i}{i!}, G(x) = \sum_{i\in T} \frac{x^i}{i!}$。设 $f_{n,i} = n! [x^n]\frac{\ln (1+F(x))^i}{i!}$ 表示将 $n$ 个元素划分成 $i$ 个集合，他们的容斥系数的乘积的和。类似地定义 $g_{m,i} = m![x^m] \frac{\ln(1+G(x))^i}{i!}$。可以得到答案等于
$$
\sum_{i=1}^n \sum_{j=1}^m k^{ij} f_{n,i} g_{m,j}
$$
考虑如何对于所有 $i$ 算出 $f_{n,i}$，我们要算的实际上是
$$
n! [x^n] \exp(u\ln (1+F(x)))
$$
考虑拉格朗日反演，令 $H(x) = e^{ux}$，得到
$$
[x^n] H(\ln(1+F(x)) = [w^{n-1}] u e^{uw} \cdot \left(\frac{w}{(1-\ln F(x))^{-1}(w)}\right)^n
$$
$(1-\ln F(x))^{-1}$ 怎么求：由于 $F$ 这个多项式非常小，直接牛顿迭代即可。

得到 $f_{n,i}, g_{m,j}$ 之后，利用 Bluestein 的套路把 $k$ 的指数上的 $ij$ 拆开，可以一次 FFT 算出答案。

## 一个 ODE 的题

2020.6.23 的模拟赛 T1

myh 的做法是考虑 $\frac{d}{dx}(F(x)^{m+1}) = (m+1)F(x)^m F'(x) = F'(x)F(x)^m + F(x) ( \frac{d}{dx} F(x)^m)$，整理得 $m F^m(x)F'(x) = F(x)(F^m(x))'$。

## 牛顿恒等式

对于多项式 $\sum_{i=0}^n a_{n-i} z^i$ 的 $n$ 个根 $x_1, x_2, \cdots x_n$，定义幂和 $S_k = \sum_{i=1}^n x_i^k$。有牛顿恒等式：
$$
\begin{cases}
\sum_{i=0}^n a_i S_{d-i} = 0 & d>n \\
\sum_{i=0}^{d-1} a_i S_{d-i} + d a_d = 0 & 1\le d\le n
\end{cases}
$$
证明：构造 $F(z) =  \sum_{i=1}^n \frac{x_i}{1-x_iz} = \sum_{i\ge 0} S_{i+1}z^i$，$G(z) = \sum_{i\ge 0} a_iz^i = \prod_i (1-x_iz)$。

显然有 $F(z) = - \frac{G'(z)}{G(z)} \Rightarrow F(z)G(z) + G'(z) = 0$。

考虑第 $z^n$ 的系数：$\sum_{i=0}^n S_{i-1}a_{n-i} + a_{n+1}(n+1) = 0$。证毕

### 例：多项式求和

答案的生成函数即是
$$
\prod_{i=1}^m \frac{1}{1-(ai^2+ bi + c)x} \bmod x^{n+1}
$$
考虑求出分母。我们相当于是知道了所有的根，那么用伯努利数算出根的幂和然后套用牛顿恒等式即可。

具体地，当 $a = 0$ 的时候对 $(bi+c)$ 二项式展开，当 $a\neq 0$ 的时候对 $ai^2 + bi + c$ 配方。

## 地底蔷薇

