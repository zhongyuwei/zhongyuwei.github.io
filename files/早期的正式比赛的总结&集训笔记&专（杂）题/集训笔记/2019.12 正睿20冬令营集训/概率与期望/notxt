# 随机游走

## 算期望经过每个点的次数

适用于：
1. 多个终点，求最终到达的是某个终点的概率
2. 选每条边期望被经过的次数

## Band Matrix

定义：所有非零项都在主对角线附近的一个带状区域内。

设带的宽度为$d$，高斯消元的复杂度可以做到$O(n\cdot d^2)$的复杂度。

注意，当$P_{i,i}=0$的时候，如果按照常规的写法去找一个$P_{j,i}\neq 0$的行，可能会破坏Band Matrix的性质；应该找一个$P_{i,j}\neq 0$的列。因为这一次消元会把这一列除了第$i$行的全部消成$0$，所以不会破坏带状矩阵的性质。

### 例 1 [WF2014H](https://icpc.kattis.com/problems/pachinko) *

### 例 2 CF963E

## 主元法

核心思想：设出比较少的变量，用它去表示别的变量。

### 例 1

有一个$n\times m$的网格。一次操作会反转一个格子以及它上下左右的四个格子的状态（开或者关）。问：

1. 至少操作多少次把所有的灯关掉。$(n\le 20,m\le 1000)$
   Sol：每个格子是否进行操作，可以由第一行的被操作状态确定。复杂度$O(mn^2 + 2^n n^2)$
2. 求一组合法解。
   Sol：同上，列出方程之后直接解就可以，时间复杂度$O(mn^2 + n^3)$

### 例 2 TorusSailing

有一个$n\times m$的网格图，若当前在$(x,y)$，则有一定概率走向$((x+1)\bmod n, y)$，剩下的概率走向$(x,(y+1)\bmod m)$。问从某个点出发走到某个点的期望步数。

Sol：设最右侧的一列和最下边的一行的格子为主元，那么剩下的格子的期望步数都可以用这些主元表示出来，最后利用从主元走出去的那些关系建立方程求解。时间复杂度$O((n+m)^3)$。

### 例 3 CF963E *

设半径为$R$的区域内，每一行最左侧的格点为主元，那么剩余的都可以用主元表示出来。用最右侧的点之间的关系来建立方程。复杂度$O(R^3)$。

### 练习 loj3080 *

## 稀疏图

（平面图和网格图都是稀疏的

设$n$为点数，设$p_i$是$i$步走到了终点的概率，则$p$满足一个$n$阶线性递推式，可以用BM算法求出。设这个递推式是$p_i = \sum_{j=1}^m b_jp_{i-j}$。设$G(x) = \sum_{i=1}^m b_ix^i,F(x)= \sum_{i=0}^{\infty} p_ix^i $，令$C(x)= (\sum_{i=0}^m p_ix^i)(1-G(x))$，则$F(x)= F(x)G(x) +C(x)$，因此$F(x) = {C(x)\over (1-G(x))}$。

稀疏矩阵的行列式求解可以做到$O(n(n+e))$（其中$e$为非零项的个数）

### 参考 *
2019zzq论文
2019wxh论文
2017毛爷爷论文

## 综合练习题 Fox Rocks(FHC)

有一个$n$个点的有向图，如果$0\le \lfloor{b\over 4}\rfloor - \lfloor{a\over 4}\rfloor \le 1$则$a$到$b$有边。

给出从每个点出发时，走每一条出边的概率。

有$m$个操作：
1. 修改一个点走某一条出边的概率。
2. 询问从$x$开始不停地走经过$y$点的概率。

Sol：把点$4$个分成一组，只会在相邻的组之间行走，用线段树维护转移矩阵的乘积，并特殊判断$x,y$所属的组。

# 概率生成函数

$$
F(z) = E(z^X) = \sum_{i=0}^{\infty} Pr(X=i)z^i\\
E(x) = F'(1) = \sum_{i=0}^\infty i \cdot Pr(X=i) \\
Var(x) = F''(1) + F'(1) - (F'(1))^2
$$

性质（注意到$E(x)$是一个常数）：

$$
Var(x) = E(x^2) - E^2(x)\\
proof: Var(x) = E((x-E(x))^2) \\
= E( x^2 - 2 E(x)x + E^2(x))\\
= E(x^2) - 2 E(E(x)x) + E^2(x)\\
= E(x^2) - 2 E(x)E(x) + E^2(x) \\
= E(x^2) - E(^2x)
$$

### 例 1 CTSC2006歌唱王国 *

参考 2018论文

# 期望线性性

## Easy Samples

[link](http://codeforces.com/blog/entry/62690)

### 2.6 (CF313D)

Sol：枚举每条边，算一条边出现的概率。只需要枚举到 j-i <= 60 的就可以了（精度要求不大）

### 2.7

有$n$个点，保证任意三点不共线。每个点以$1\over 2$的概率出现。求凸包上点数的期望。

Sol：
1. 对凸包轮廓的dp
2. 算每个点出现的概率，容斥（点出现在凸包上等价于所有的其他出现了的点都在这个点的某一侧）【不知道这样子能不能做。。。

## 其它例题

### CF280C

一个点被操作的概率，就是在它和它的所有祖先中，它是第一个被操作的。所以答案就是$\sum {1\over dep_i}$

### CF235D

对于树（也就是bzoj3451），答案是
$$
\sum_{x,y} {1\over dis(x,y)}
$$

而对于基环树，如果两个点之间的路径经过了环，设它们两个之间的两条路径的长度是$s_1,s_2$，两条路径的并的长度是$s_3$，则它们的贡献是${1\over s_1} + {1\over s_2} - {1\over s_3}。

### random


有一个长度为$n$的排列，每次随机选择交换一对相邻的逆序对，代价是交换的两个数中左边那个数的下标，问期望代价。$n\le 18$。

Sol：对每个数字算出它的代价。假设这个数字是$i$，则数组中的所有数字都可以看做0,1,$i$中的一个。

然后每一次会随机地交换一对(0,1)，(1,i)，(i,0)。

不需要考虑(1,1), (0,0)这样的逆序对，因为即便随机到了这样的逆序对，我们也不会转移到其它状态。所以我们实际上算的是能够转移到的状态按照转移到它的概率大小进行的加权平均。


### bzoj3148 没头脑和不高兴 *

考虑每一对数为逆序对的概率。

对于第$k$个1和某一个在它前面的$0$，概率为$1\over k+1$
对于倒数第$k$个1和某一个在它后面的$0$，概率为$1\over k+1$


### PE522 *

内向树，\sum 入度-1 = 叶子个数-1
所以就是环个数期望 + 叶子个数期望

### CF1236F

仙人掌连通块个数 = 点数 - 边数 + 环数。

然后根据$Var(X) = E(x^2) - E^2(x)$分类讨论计算。

### Fibonacci's Nightmare *

有一个序列$a$，$a_0 = 1, a_n = a_i + a_j$，其中$i,j$在$[0,n-1]$之间随机选择。求第$n$项的方差。$n\le 10^6$

Sol：

$Var(x) = E(x^2) - E^2(x)$，经典结论是$E(a_n) = n+1$。

下面考虑$E(a_n^2)$：

$$
E(a_n^2)\\
= {1\over n^2} \sum_i \sum_j E[(a_i+a_j)^2] \\
= {1\over n^2} \sum_i \sum_j E(a_i^2 + 2\cdot a_i a_j + a_j^2) \\
= {2\over n} \sum_{i\in [0,n)} E(a_i^2) + {2\over n^2} \sum_{i\in [0,n)} \sum_{j\in [0,n)} E(a_ia_j) \\
= ({2\over n} + {2\over n^2}) \sum_{i\in [0,n)}E(a_i^2) + {4\over n^2} \sum_{0\le i< j < n} E(a_ia_j)
$$

设
$$
f_n = \sum_{i\in [0,n]} E(a_i^2) \\
g_n = \sum_{0\le i< j < n} E(a_ia_j)
$$

则有
$$
f_n = f_{n-1} + E(a_n^2) \\
= (1 + {2\over n} + {2\over n^2}) f_{n-1} + {4\over n^2} g_{n-1} \\
g_n = g_{n-1} + \sum_{i=0}^{n-1} E(a_ia_n) \\
= g_{n-1} + {1\over n^2}\sum_{i=0}^{n-1} \sum_{j=0}^{n-1} \sum_{k=0}^{n-1} E((a_j+a_k)a_i) \\
= g_{n-1} + {2\over n^2} \cdot n \sum_{i=0}^{n-1} \sum_{j=0}^{n-1} E(a_ia_j) \\
= g_{n-1} + {2\over n} (f_{n-1} + 2 g_{n-1})
$$

# 积分

### CF1153F

$$
Ans = \sum_{m\ge k} \int_0^1{n\choose m} (2x(1-x))^m (1-2x(1-x))^{n-m} dx
$$

# Min-max容斥

$$
\max(S) = \sum_{T\subseteq S} \min(T) (-1)^{|T|+1}
$$

## 扩展 *

$$
\operatorname{k-th\ max}(S) = \sum_{T\subseteq S} \min(T) (-1)^{|T|-k} {|T|-1\choose k-1}
$$

证明：考虑第$k+t$大的元素对上式的贡献：

$$
\sum_{j=0}^t (-1)^j {k+j-1\choose k-1} \cdot {k+t-1\choose k+j-1} \\
= \sum_{j=0}^t(-1)^j {k+t-1\choose k-1} \cdot {t\choose j} \\
= {k+t-1\choose k-1} \cdot \sum_{j=0}^t (-1)^j {t\choose j} \\
= {k+t-1\choose k-1} \cdot (1-1)^t\\
= {k+t-1\choose k-1} \cdot [t=0]
$$

# 其它技巧

## 组合意义的转化

### $2^x$

转化成$x$个元素的子集数。

#### 例 CF457D *

### $x^n$

转化成$\sum_{i=0}^n \begin{Bmatrix}n \\ i\end{Bmatrix} \cdot \begin{pmatrix}x \\ i\end{pmatrix} \cdot (i!)$

## 实数排名

对于在同一个范围内随机的$n$个实数变量，它们的$n!$种大小关系的出现概率相等。

### 例 1 CF303E

### 例 2 CF1153

##  枚举实数部分的大小关系

### 例 1 uoj352 新年的五维几何 *

### 例 2 AGC020 Arcs on a circle *

## 两个连续性问题的结论

1. 从$[0,1]$中随机选$n$个数，第$k$小的数的期望是$k\over n+1$。
2. 把$[0,1]$划分成$n$段，第$k$短的段的期望是${1\over n}\cdot ({1\over n}+ {1\over n-1} + \cdots {1\over n-k+1})$

参考：[1](https://math.stackexchange.com/a/13972) [2](https://www.zhihu.com/question/30359365/answer/47803012) [3](https://www.zhihu.com/question/30359365/answer/47861901) [4](https://github.com/zhongyuwei/OI/blob/master/%E7%AC%ACk%E5%B0%8F%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%9F%E6%9C%9Bto%E7%A5%9D%E8%80%81%E5%B8%88.pdf)