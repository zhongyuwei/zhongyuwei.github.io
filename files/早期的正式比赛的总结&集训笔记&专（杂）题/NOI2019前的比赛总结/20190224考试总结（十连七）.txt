# 20190224考试总结（十连七）

标签（空格分隔）： 总结

---

### T1 算术表达式

表达式的定义如下：

> 1.一个$[0,m)$中的不含前导零的整数是一个表达式。
2.若$E$是表达式，则$(E)$是表达式。
3.若$E_1,E_2$是表达式，则$E_1+E_2,E_1-E_2$都是表达式。

问长度为$n$（按照字符串的长度计算），且值在模$m$的意义下等于$P$的表达串的个数。答案对$10^9+7$取模。$n\le 50,m\le 200$

Solution：想对拍一下，写了一个多小时的暴力，发现暴力和正解输出不一样，最后没管那么多直接交了正解，A了。~~这题的暴力真的比正解还难写。~~

我们设$dp[i][j]$表示长度为$i$且值为$j$的表达式的数量。考虑怎么转移过来：我们枚举整个表达式的最后一个括号或者最后一个数字，以及这个东西前面的符号。需要特殊考虑整个表达式的最右边的括号包含了整个表达情况的情况。易得对于每个本质不同的表达式，转移是唯一的，所以不会重复计算。

---

### T2 树与深度的故事

一棵奇怪的有根树的每个节点的儿子是有序的。两棵奇怪的有根树相同当且仅当它们点数相同并且每个节点的儿子序列相同。定义$dep_i$为$i$点到根的路径上的边的数量。给出所有$a_i$，求满足$dep_i\le a_i$的奇怪的有根树的数量。$n\le 100$

Solution：自闭了。

考场想的方法是，考虑从根节点开始一层一层地填。设$dp[i][j][k]$为填了$i$层，前$i$层有$j$集合中的点，第$i$层有$k$个点。那么：
$$
dp[i][j][k] = \sum_{S\in j 并且 \forall x\in S,a_x\ge i} dp[i-1][j - S][r] \times {k+r-1\choose r-1} \times k!
$$

结果发现第二维的状态无论如何都优化不掉，就自闭了。

但是这个限制意味着：对于$dp[i+1]$可以选的点，我们在$dp[i]$一定可以选。那么我们就考虑倒着$dp$。设$s[i]$表示$a_x\ge i$的$x$的数量，设$dp[i][j][k]$表示第$i$层到第$n$层填了$j$个点，第$i$层填了$k$个点的方案数。那么：
$$
dp[i][j][k]=\begin{cases}
\sum dp[i+1][j-k][y] \times {s[i]-(j-k)\choose k} \times {y+k-1\choose k-1}\times y! && \text{if }j\not =k\\
{s[i]\choose k} && \text{otherwise}
\end{cases}
$$

这样dp的复杂度是$O(n^4)$的，由于zr机子快，可以过。

---

### T3 异或函数的值域

对于一个长度为$n$的序列$a_1,a_2,\cdots a_n$，我们定义$f(a_1,a_2\cdots a_n)$为这个序列的所有子集，每个子集中的元素异或起来得到的值求和的结果。

给出序列长度为$n$的函数和所有$a_i$的上下界$[l,r]$，问这个函数有多少种取值。$T\le 10^5,1\le n\le 100,1\le l\le r\le 10^{18}$

Solution：用类似Odd rectangle那道题的方法，可以推出结论：$f(a_1,a_2\cdots a_n) = (a_1\text{ or } a_2\cdots a_n ) \times 2^{n-1}$。我们可以考虑每一位，有多少个子集在这一位上为$1$。如果原序列中有至少一个数在这一位上的取值为$1$，那么就有$2^{n-1}$种方案，否则就有$0$种方案。

那么问题转化成，所有数在$[l,r]$中取值，问它们的或和有多少种取值。首先要特判掉$n=1$的情况。如果在二进制最高位$l$和$r$相同，我们可以直接把最高位扔掉，不会影响答案。扔完以后设$r$最高的$1$的位置为$2^i$，次高的$1$为$2^j$（如果不存在则令$j=-1$）。那么答案就是区间$[l,2^i)\cup[0,2^{j+1})$的长度加上$[l,2^i)$的长度。

我们考虑当这个或和在$2^i$位取值为$0$的时候，后$i-1$位的取值可以在$[l,2^i)$中任意。而当在$2^i$取$1$的时候，我们考虑什么情况下后$i-1$位：这$i-1$位取$[l,2^i-1)$一定是可以的，取$[0,r-2^i]$也一定是可以的；我们考虑那些可能取得比$r-2^i$取得更大的情况，发现一定是要取一个在$2^j$位为$0$的数，这个数一定比$r-2^i$小，因此它在$2^j,2^{j-1},2^{j-2}\cdots 2^0$这些位上都可以任意取值。我们可以选择再取一个在$2^j$为$1$的数，或者就让$2^j$这一位为$0$，总的来说我们的方案数就是$[l,2^{i}) \cup [0,2^{j+1})$。

挺好的思维题。但是没有想出来，自闭。