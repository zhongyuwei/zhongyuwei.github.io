# 20190506 模拟考试

标签（空格分隔）： 总结

---

### T1 麻雀

有一个长度为$n$的序列，有$m$操作。操作有两种：1）修改一个位置的值。2）往集合S中加入一个区间。定义一个区间的权值为这个区间内所有数的和。保证任意时刻序列中的所有数都是非负数。你需要在每一次操作过后，输出权值最大的区间的权值。$n,m\le 10^5$

Solution：

:( 然而我没有想出来这道题应该怎么做

序列中所有数都非负，意味着如果$A$区间包含了$B$区间，则$B$一定无用。因此把所有的有用的区间按照左端点排序后，有用的区间是连续的一段，可以用splay维护。

CZM用了线段树，线段树上每个位置维护以这个位置为左端点、右端点最靠右的区间，操作1的时候直接找到最靠左的、右端点大于等于修改位置的那个区间，把这个区间的左端点到修改位置全部加上修改的值。这是因为即使我们修改了不需要修改的区间，那些区间一定不会对答案造成贡献。

---

### T2 字符串匹配

有两个字符串$S$和$T(|S|\ge |T|)$，字符串的每个位置是一个字符集。两个位置匹配定义为两个位置的字符集有交。问$T$在$S$中的所有匹配位置。$|S|\le 200000$，保证字符串中只包含前$5$个小写字母。

Solution：

考虑枚举交集，然后FFT统计匹配位置的个数。当交集大于$1$的时候，这样会算重，所以再套个容斥就可以了。复杂度$O(2^5 n\log n)$。

但是这道题得了$0$分，程序对拍、跑最终的测试数据都没有问题，lemon里面却一直运行时错误。最后发现一个没有返回值的函数被我声明成了int。把这个地方改过来我就100分了。。。

两个教训：1）写程序的时候，哪怕是模板，也不要掉以轻心。2）编译的时候打开Wl选项。

---

### T3 图论原题

一张包含$n$个节点，$m$条边的图。图中每个点有两个权值$a_i,b_i$。定义一个点集的权值是，这个点集中所有点的$a_i$的最大值加上这个点集中所有点的$b_i$的最大值。问所有大小为$k$且连通的点集中，权值最小的点集的权值。$n\le 3\times 10^5,m\le 5\times 10^5$

Solution：

首先有一个等价的转化，把边权改成边两端的点的点权的较大值，然后把$S$的权值改成某个生成树的所有$a_i$的最大值加上所有$b_i$的最大值。

从小到大枚举加入的边的$a_i$的最大值，同时维护$b_i$的最小生成树。并且每新加入一条边，我们要尝试减小$b_i$，即尝试把当前$b_i$最大的边cut掉之后，是否仍然存在包含大于等于$k$个点的连通块。

注意，如果加入的边的$b_i$大于当前图中的$b_i$的最大值，或者是等于当前图中$b_i$的最大值，但是此时已经有了合法的连通块（如果是等于并且当前图中还没有合法的连通块，那么我们仍然应该加入这条边），我们不应加入这条边。

这道题的边权是由点权决定的，因此我们不需要像其他题一样建虚点来维护边权，直接维护链上点权最大的点就可以了。

