# 20190617 考试总结

标签（空格分隔）： 总结

---

### T1 担心

有$n$个人排成一排，第$i$个人的实力是$a_i$。每一次随机选择两个相邻的人，让他们比赛一场，赢的人留下来。

两个实力为分别为$a$和$b$的人打，第一个人获胜的概率是$a\over a+b$，第二个人获胜的概率是$b\over a+b$。

求$n-1$个人过后，对于某一个给定的$k$，第$k$个人成为最后留下来的那一个人的概率。$n\le 500$，答案对$998244353$取模。

Solution：

设$fl_{i,j}$表示只考虑$[i,j]$的人，最后$i$留下来的概率乘以对应的安排比赛顺序的方案数。$fr_{i,j}$表示只考虑$[i,j]$的人，最后$j$留下来的概率乘以对应的安排比赛顺序的方案数。那么答案就是${1\over (n-1)!} \cdot {n-1 \choose k-1} \cdot fr_{1,k} \cdot fl_{k,n} $。乘以$n-1\choose k-1$的原因，是因为还要计算比赛发生顺序的方案数，而左右发生的比赛之间的顺序是独立的。

考虑如何转移：对于$fl_{i,j}$，我们枚举$i$亲自打败的、位置最靠右的人$k$，枚举$k$亲自去打败的、位置最靠左的点$x$，那么：

$$
fl_{i,j} = \sum_{k} \sum_x fl_{i,x-1} fr_{x,k} fl_{k,j}\cdot {j-i-1\choose j-k} \cdot {k-i-1\choose k-x} \cdot p_{i,k} 
$$

其中$p_{i,k}$为$i$打败$k$的概率。

发现这个式子里面，$fl_{i,x-1} fr_{x,k}{k-i-1\choose k-x} $与$j$没有关系，而另外一部分和$x$没有关系。

我们设$h_{i,j} = \sum_x fl_{i,x-1} fr_{x,j} {j-i-1\choose j-x}$，那么
$$
fl_{i,j} = \sum_k h_{i,k} fl_{k,j} {j-i-1\choose j-k} \cdot p_{i,k}
$$

时间复杂度$O(n^3)$。

此外还有一个精妙做法：加入两个人$0$、$n+1$，并且让他们的实力为$0$，也就是任何人和他们挑战都会输，这样的问题和原来的问题仍然是等价的。考虑倒着插入，设$f_{i,j}$表示$[i,j]$这一段，$i,j$都留到了最后的概率。对于一个新插入的点，会影响到它的就是插入它之前在它左右的点，它会被它左右的两个点中的一个打败。

故而转移就是：$f_{i,j} = \sum_{i <k < j} f_{i,k} \cdot f_{k,j} \cdot (p_{i,k}+p_{j,k} )\cdot {j-i-2\choose k-i-1}$。

最后的答案就是$f_{0,k}f_{k,n+1}{n-1\choose k-1} {1\over (n-1)!}$。

---

### 可爱

给出一个长度为$n$的字符串$S$，它有$n-m+1$个长度为$m$的子串。认为两个字符串是差不多一样的，当且仅当两个字符串长度相同且至多存在一个$i$，这两个字符串的第$i$位不一样。

对于这$n-m+1$个长度为$m$的子串，你都需要求出$S$中与它差不多一样的字符串并输出。$n\le 10^5,m\le n$，字符集大小为$4$。

Solution：

对于两个差不多一样的字符串，要么这两个字符串完全一样，要么这两个字符串的最长公共前缀长度 + 最长公共后缀长度 = m-1。总的来说就是最长公共前缀长度 + 最长公共后缀长度大于等于 m-1 。

对$S$正着建一遍后缀数组记为$A$，反着建一遍后缀数组记为$B$。对$A$进行分治，每一次按照区间内height的最小值把区间分成两个部分。那么左区间的前缀与右区间的前缀的lcp就是分界点的height。此时，如果枚举其中的每一个串，计算另一个区间对这个串的贡献，那么可行的串在$B$中是连续的一段区间，可以通过二分找出这个区间，然后在当前分治的另一个区间内，查询$B$中排名在对应区间的串的数量。可以用线段树合并来维护区间内点在$B$中的位置。

但是这样的复杂度是不对的。

实际上我们只需要枚举左右区间中较短的那个区间中的每一个串，在另一个区间内查询，并且在另一个区间内的线段树上打标记。

时间复杂度$O(n\log ^2 n)$。

---

### 互膜

有$n$个数依次是$a_1,a_2,\cdots a_n$，保证$n$是正偶数。初始的时候奇数位置的数属于$A$，偶数位置的数属于$B$。两个人轮流操作，总共操作$n-1$轮，$A$操作奇数轮，$B$操作偶数轮。第$i$轮可以改变第$i$个数或者第$i+1$个数属于的人，可以两个都不改变，但是至多改变一个。操作完过后，属于自己的数的和较大的人会赢。

两个人都会采取最优策略。有$q$次修改，每一次会将第$x$数减少$y$。你需要计算，第一次修改前以及每一次修改后，最终$A$得到的数的和。保证任意时刻$a_i \ge 0$。

$n,q\le 2\times 10 ^5 ,a_i \le 10^9$

Solution：

设$f_{i,0/1}$表示前$i-1$轮操作后第$i$个位置所属于的人是否被修改过，考虑第$i$到$n$个数第$i$轮操作的人得到的数的和 - 另一个人得到的数的和。

初始$f_{n,0} = a_n ,f_{n,1}  = 0$。

则有
$$
f_{i,0} = \max \{ -f_{i+1,0}+a_i,-f_{i+1,1} + a_i \}\\
f_{i,1} = \max \{ -f_{i+1,0}+a_i,-f_{i+1,1} - a_i \}
$$

设$d_i = f_{i,0} - f_{i,1} $。上式可以写为：
$$
f_{i,0} = \max\{ a_i - d_{i+1},a_i \} - f_{i+1,1} \\
f_{i,1} = \max\{ a_i - d_{i+1},-a_i \} - f_{i+1,1} 
$$

按照$d_{i+1}$的大小分三种情况讨论：

- $d_{i+1} < 0 $：此时$d_i = (a_i-d_{i+1}) - (a_i - d_{i+1})= 0$。
- $0 \le d_{i+1} \le 2a_i$：此时$d_i = a_i - (a_i - d_{i+1}) = d_{i+1}$。
- $d_{i+1} > 2a_i $：此时$d_i = a_i - (-a_i) = 2a_i$。

综上，$d_{i+1}$的变化，就是对$0$取max，对$2a_i$取min。

又因为初始的时候$d_n = 2a_n \ge 0$，所以$d_i$始终都会大于等于$0$。故而，$d_i$就是$a_i$的后缀min的二倍，$f$的转移也可以写成：

$$
f_{i,0}= a_i - f_{i+1,1} \\
f_{i,1} = \max \{ a_i - d_{i+1},-a_i \} - f_{i+1,1}
$$

而我们最后要求的$f_{1,0}$等于：
$$
f_{1,0} = a_1 - f_{2,1} \\
= a_1 - (f_{2,0} + d_2 ) \\
= a_1 + d_2 - f_{2,0} \\
= a_1 + d_2 - a_2 - d_3 + f_{3,0} \\
\cdots \\
= a_1 - a_2 + a_3 \cdots -a_n \\
+ d_2 - d_3 + d_4 \cdots +d_n
$$

用各种方法都可以维护。一种做法是线段树维护单调栈，但是由于这道题$a_i$只会越来越小，可以直接维护后缀min的序列。