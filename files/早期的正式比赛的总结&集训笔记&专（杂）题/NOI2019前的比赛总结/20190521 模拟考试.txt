# 20190521 模拟考试

标签（空格分隔）： 总结

---



### T1

求
$$
\sum_{i=1}^n i^k \sum_{\sigma_1 \sigma_2 \sigma_3\cdots \sigma_m = i } d(\sigma_1)d(\sigma_2)d(\sigma_3) \cdots d(\sigma_m)
$$
其中$(\sigma_1,\sigma_2,\cdots \sigma_m )$是有序的，即$(1,2)$和$(2,1)$会被认为是不同的，被统计两遍的贡献。

$n\le 10^{10},k\le 10^3,m\le 10^9$

Solution：

前面的$i^k$很烦，我们把它改成$\sigma_1^k\sigma_2^k\cdots \sigma_m^k$，然后放进后面的$\sum$。

考虑$dp$。设$f_{j,i}$表示$j$个数乘积为$i$的所有方案的$\sigma_1^k d(\sigma_1)\sigma_2^k d(\sigma_2)\cdots \sigma_j^k d(\sigma_j)$的和，则$f_{j+1,i\cdot x} += f_{j,i}\cdot d(x)x^k$。这是一个狄利克雷函数卷积的形式。答案要求的就是$d(x)x^k$这个函数的$m$次方的前缀和。用类似杜教筛的方法可以在$O(n^{2\over 3})$的时间计算两个狄利克雷函数的卷积的结果（只记录前$n^{2\over 3}$项和在$\lfloor {n\over 1}\rfloor ,\lfloor {n\over 2}\rfloor ,\lfloor {n\over 3}\rfloor \cdots $这些位置的前缀和的取值）。根据狄利克雷卷积具有结合律可以快速幂。考虑到$d(n)n^k = \sum_{i|n} i^k ({n\over i})^k$，因此只需要用拉格朗日插值算出$\sum_{i=1}^x i^k$在$\lfloor {n\over 1}\rfloor ,\lfloor {n\over 2}\rfloor  , \lfloor {n\over 3}\rfloor \cdots $的取值，然后做一遍卷积就可以了。由此我们得到了$O(n^{2\over 3} \log m)$~~乘以巨大常数~~的做法，可以得到$54$分的成绩。

实际上，$x^k,d(x)$都是积性函数，因此它们卷积得到的函数也是积性函数，可以min_25筛。质数的函数值是质数的$k$次方乘以$2\cdot m$（$d$的取值的乘积是$2$，而从$m$个位置中选一个位置放这个质数的方案数是$m$）。$p^x$的函数值等于$p^x$乘以一个和$x$有关的值，这个东西可以通过$dp$在$O(x^3)$或者$O(x^2 \log m)$的时间内预处理出来。时间复杂度据说是$O({n^{3\over 4}\over \ln n})$。

------

### T2

有$n$个人排成一排，第$i$个人崇拜的对象是$p_i(p_i\in \{ 0,1,2\})$，崇拜程度则是$A_i$。定义一个区间是合法的，当且仅当不存在两个人$x,y\in \{0,1,2\},x\not = y$，区间内崇拜这两个人的人数相同。对于每个人，你需要输出这个人作为右端点的所有合法区间中，区间内的$A_i$异或和最大的区间的异或和。强制在线，也就是说你需要得到对于某一个人的答案，才能够得到下一个人的信息。$n\le 3\times 10^5,A_i\le 10^9$，空间限制$256MB$。

Solution：

我们对于每个点记$(x,y,z)$为以这个点结尾的前缀中，崇拜$0,1,2$的人的数量。记$a=x-y,b=y-z,c=z-x$。一个区间$[l,r]$合法的条件条件是$a_{l-1}\not = a_r,b_{l-1}\not=b_r,c_{l-1}\not = c_r$。

把$A_i$前缀和一下，然后建Trie。问题在于怎么判定某一个子树内是否存在一个点$(a,b,c)$与当前我们查询的这个点都不同。

一种做法是容斥。我们对于$a,b,c$的每一个取值都建一个trie树，对每个三元组$(a,b,c)$也建一个trie树，还要再建一个大的trie树把所有的数都扔进去一遍。用map存储trie的根节点。和点$(a,b,c)$每一位取值都不相同的数 = 所有的数 - $a$和它相同的数 - $b$和它相同的数 - $c$和它相同的数 + 2 * $a,b,c$都和它相同的数。最后一步是因为我们可以由$a_1=a_2,b_1=b_2$推出$c_1=c_2$，这是我们的定义决定的。这样每个点会被插入$5$棵trie树，复杂度是$O(5\cdot n\log V)$，会MLE。如果通过把度为$2$的点缩掉使得trie的节点数变成$O(n)$是可以通过的。

题解的做法是，对于trie上每一个节点，我们记录下这个节点子树中的三元组中的其中一个，假设是$(x_1,y_1,z_1)$。考虑查询的三元组与这个三元组至少有一位冲突了的情况（假设是$x$）：我们就需要再存下一个$x$与第一个三元组不同的三元组$(x_2,y_2,z_2)$（实际上只需要存$y_2,z_2$两个变量就够了），而如果这时候$y,z$仍然有冲突，注意不存在$y,z$都冲突而$x$不冲突的情况（也就是说不会$y,z$都冲突），假设冲突的是$y$，我们可以得到此时查询的三元组$x=x_1,y=y_2,z=-(x_1+y_2)$，最后这一步是因为$，因而我们只需要关心是否存在过一个点，x+y=(a-b)+(b-c) = a- c = -z，因而我们只需要关心是否存在过一个点，$$x\not= x_1$且$y\not = y_2$且$z\not = -(x_1+y_2)$。这个用一个bool存下就好，这个点需要用到的所有bool都可以压在一个int里面。因此一个节点我们需要开$3+3\times 2+1 = 9$个int。每一层的节点数量是$\min(2^k ,n) $的，故而总点数是$2^{18} + 12 \cdot n < 4000000$的，能开下。

------

### T3

有一个$n\times m$的网格，每个格子可能有敌人或者没有敌人。问有多少种局面，使得可以用两个$x\times y$的矩形把所有有敌人的格子包含在内。$n,m\le 60,1\le x\le n,1\le y \le m$

Solution：

现在只考虑存在有敌人的格子的情况。

以下是CZM的做法：枚举出包含所有有敌人的格子的最小矩形，那么放置$x\times y$的矩形的决策一定是左上角放一个，右下角放一个或者左下角放一个，右上角放一个。合法的局面数 = 通过第一种方案可以把所有敌人消灭掉的局面数 + 通过第二种方案可以把所有的敌人消灭掉的局面数 - 通过两种方案都可以把所有的敌人消灭掉的方案数。这相当于是限制了一些格子不能够放敌人。同时，我们还要求了上下左右四个边界必须都要有敌人，这个就再套个容斥，矩形的长或者宽为$1$的情况比较烦，我是特判的。总复杂度$O(nm\cdot 2^4 )$。

题解的做法是，枚举完包含所有敌人的最小矩形后我们逐个格子进行$dp$，我们只关心此时上下左右四个边界是否已经有敌人，并且是否能够通过第一种/第二种方案把所有敌人都消灭掉。可以用一个$6$位二进制数来表示这个状态。总时间复杂度$O(n^2m^22^6)$。


