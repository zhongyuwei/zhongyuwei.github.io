# 20190612 模拟考试

标签（空格分隔）： 总结

---

### T1 Graph

有一张包含$n$个点$m$条边的有向图，图的邻接矩阵$A$显然是一个$n\times n$的布尔矩阵。

序列$A^1,A^2,A^3\cdots $是循环的，你需要找出这个序列的周期；有的时候你还需要找出这个序列是从什么地方开始循环的。

对于一部分数据，你只需要找出周期$d$，此时保证$n\le 10^5,m\le 2\times 10^5$。
对于另一部分数据，你需要找出最小的$k$满足$A^k = A^{k+d} $。此时保证$n\le 200,m\le 3000$

$k,d$对$10^9+7$取模。

Solution：

结论：对于一个强连通分量，这个强连通分量的周期是这个强连通分量内所有的环的长度的$gcd$。整张图的周期是强连通分量的周期的$lcm$。

然后，对于一个强连通分量，我们搞出它的dfs树，然后直接求所有的所有包含只包含一个非树边的环的长度，对这些长度求$gcd$就可以了。因为包含多条非树边的环的长度的差可以表示成只包含一个非树边的环。

注意这里的一个数至多只会包含$8$个质因子，所以直接对每个质因子统计$lcm$里面这个质因子的次数就可以了。

然后对于要求$k$的数据，写个程序计算会发现此时的$d$不会超过long long的范围。于是先求出$A^d $，然后倍增求出$A$的$2^0,2^1,2^2\cdots $，倍增找出最大的满足$A^{k+d} \not= A^k $的$k$。

---

### T2 String

你有一个字符串$T$。 用字符串$T$生成字符串$S$的方法是：选择$T$的若干个子串，然后按照某种顺序拼接起来得到$S$（可以重复选择同一个子串；选择的子串可以相交），代价是选择的子串的个数。

你需要找出一个长度为$n$的字符串$S$，使得生成$S$的最小代价最大，并输出这个最小代价。$|T|\le 10^5,n\le 10^{18}$，并且$T,S$都只包含前$4$个大写字母。

Solution：

给定$S$之后，显然最优策略是从开头开始，选择最长的是$T$的子串的前缀，然后删掉，然后再选择最长的是$T$的子串的前缀然后删掉……

所以，问题转化成在$T$的后缀自动机游走，当没有当前字符对应的边的时候就回到起点同时代价$+1$。

我们直接上只关心从起点出发的一条出边 -> 另一条从起点出发的出边，之间至少需要走多少步。这个可以在后缀自动机这个dag上拓扑排序+dp就做完了。

然后就是一个只有字符集大小的图，每走一步有一个代价，问你花费$n$的代价至多可以走多少步。

最优的策略一定是一条链 -> 在一个环里面一直绕 -> 走出去一条链。暴力枚举排列其实就可以了。

