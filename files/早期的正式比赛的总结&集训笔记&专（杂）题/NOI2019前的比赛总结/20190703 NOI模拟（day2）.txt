# 20190703 NOI模拟（day2）

标签（空格分隔）： 总结

---

### T1 范

$(1,1)$到$(n,m)$的矩阵，里面有$n\times m$个整点，它们组成点集$S$。问有多少个大小为$K$的点集，所有的点共线。$n,m,K\le 100000$

Solution：

特判掉$K=1$。先计算出所有与$x$轴或者$y$轴平行的线的贡献。

枚举线段的起点和终点，设他们横纵坐标的差分别为$w,h$，那么这上面的整点的数量是$gcd(w,h)+1$。换而言之，我们需要求：

$$
\sum_{w\le n} \sum_{h\le m} {gcd(w,h)-1\choose K-2} (n-w)(m-h)
$$

用莫比乌斯反演优化：

$$
\sum_d \sum_{w\le {\lfloor {n\over d} \rfloor }} \sum_{h\le {\lfloor {m\over d} \rfloor }} [gcd(w,h)=1] {d-1\choose K-2} (n-wd)(n-hd) \\
=\sum_d {d-1\choose K-2}\sum_{d|p} \mu({p\over d}) \sum_{w\le {\lfloor {n\over p} \rfloor }} \sum_{h\le {\lfloor {m\over p} \rfloor }}  (n-wp)(n-hp) 
$$

最后那一坨是两个等差数列求和过后的积。直接算上面的式子，时间复杂度$O(n\log n)$。

总结：考场我没有做出来这道题，甚至连暴力都没有打出来，主要原因是：1）对数论相关结论不熟悉，不知道$(0,0)$到$(x,y)$上的整点数是$gcd(x,y)+1$。2）对于莫比乌斯反演，平时做的题都太过于套路和明显，拿着这道题根本就没有想到可以这样优化。

---

### T2 老

有$n$个区间，区间端点是整点。现在你需要选择若干个点（不必是整点），使得：1）所有区间至少包含一个选出的点，并且点数最少。2）满足1）的条件的前提下，给每一个区间确定某一个你选出的点，使得代价最小。用点$x$覆盖$[l,r]$的代价是$abs((x-l)-(r-x))$。$n\le 5\times 10^5,1\le L_i \le R_i \le n$

Solution：

发现代价就是$abs(2x-l-r)$，那么$x$要么就取$l+r\over 2$（此时代价最小），要么就是能够取到的、离$l+r\over 2$最近的地方，此时$x$一定是整点。所以我们只需要一开始把所有的坐标全部乘以$2$，就可以避免考虑小数，最后把答案除以$2$就可以了。

假设已经选好了点，并且保证了每个区间都至少被一个点覆盖。考虑我们选择的相邻的两个点$x,y$，以及$mid={\lfloor {x+y\over 2}\rfloor }$。对于中点在$[l,mid]$的线段，肯定是用$x$去覆盖；中点在$[mid+1,r]$的线段，肯定是用$y$去覆盖。也就是说，每一条线段我们都选择离它的中点最近的点去覆盖它。考虑设$f_i$表示所有中点小于等于$i$的线段已经全部被考虑了的最小代价。发现对于每一个$i$，$f_i$用的点数是确定的——因为如果可以更小的话，我们最终用的总点数也可以更小。这个点数是可以贪心计算的（按照右端点排序之后从左到右处理）。于是，我们得到了一个分层的$dp$，每一层所用的点数是相同的，每一层只能转移到下一层。

这个$dp$的权函数满足四边形不等式，所以可以利用决策单调性优化。时间复杂度$O(n\log n)$。

权函数的计算：发现计算的时候，所用到的去覆盖的点和所有中点（也就是$l+r\over 2$）的大小关系是相同的，所以之间算出和最后取个绝对值就可以了。通过讨论每个位置的中点的贡献可以发现它满足四边形不等式。设$V_{i,j}$表示选$i,j$两个点的开销。每个中点对权值的贡献，是这个中点到$i$和$j$的距离的最小值的二倍。考虑现在有四个点$a<b<c<d$，我们需要证明$V_{a,c} + V_{b,d} \le V_{a,d}+V_{b,c} $。

- 对于$[a,b)$之间的中点，由于$c<d$，所以它对$V_{a,c}$的贡献一定小于等于它对$V_{a,d}$的贡献。对于$(c,d]$之间的中点同理。
- 对于$[b,c]$中的点$x$，最终的决策可能有这么几种情况：
    - 如果$x$对$V_{a,c} + V_{b,d}$的贡献是$(c-x)+(x-b)$，那么有$c-x\ge x-a,d-x\ge x-b$。此时由于$V_{a,d} + V_{b,c}$不能                                                                                                                                                                                                                                                                                                                                                                                                                                                                          够选择$(c-x)+(x-b)$，它的选择方式得到的贡献一定会比$(c-x)+(x-b)$大。
    - 如果$x$对$V_{a,c} + V_{b,d}$的贡献是$(x-a)+(x-b)$，也就是$c-x\ge x-a,d-x \ge x-b$，那么可以推出：
        - 由于$c-x\ge x-a,a<b$，所以$c-x>x-b$。
        - 由于$c-x\ge x-a,c<d$，所以$d-x>x-a$。
    综上，这种情况下$x$对$V_{a,d}＋V_{b,c}$的贡献一定也是$(x-a)+(x-b)$。
    对于$x$的贡献是$(c-x)+(d-x)$的情况也是同理。

综上所述，我们总是有对于任意四个点$a,b,c,d$满足$a<b<c<d$，有$V_{a,c}＋V_{b,c} \le V_{a,d} + V_{b,c} $。

---

### T3 板

对于某个dfs序为1到$N$的有根树，已知第$i$个点的子树大小至少是$A_i$，问有多少种合法的树。$N\le 10000$，时限1s，空间限制512MB。

Solution：

设$P_i = i+A-i-1$。首先，从后往前地，对于第$i$个点找出$[i,P_i]$内最大的$P_j$，如果这个东西大于了$P_i$就把$P_i$设成它。此时我们的限制构成了一棵树。

考虑树形$dp$。设$f_{u,j}$表示考虑完了$u$所有已经访问过的儿子，此时最右链的长度（想象成括号序，就是左括号的个数），加入第$j$个儿子的时候，我们有：

$$
f'_{u,j} = \sum_{k\ge j-x} f_{u,k} \cdot f_{v,x}
$$

表示把$v$的那条链接在$u$的最右链的第$j-x$个点上。用后缀和优化后可以做到$O(n^2)$。