# 20180921考试总结（初赛）

标签（空格分隔）： 总结

---

###一、新get到的东西

####（一）noip常识

全国青少年信息学奥林匹克联赛（*National Olympiad in Informatics in Provinces* ，简称NOIP）自*1995* 年开始举办。

Basic（*2005* 年被取消）、C（*2022* 年将被*部分* 取消）/C++或Pascal（*2022* 年将被*全部* 取消）

####（二）图像

1.相同条件下，位图占的空间比矢量图大。
2.计算位图需要的空间：像素的数量$\times$颜色的位数=图占的位数
例如：分辨率为1600x900、16 位色的位图，占字节数为1600$\times$900$\times$16/8 B=2812.5 KB；黑白两色的图像每个像素只占一位。

####（三）递推
1.若某算法的计算时间表示为递推关系式：
$T(N)=2T(N/2)+N\log N$
$T(1)=1$
则该算法的时间复杂度为$O(n\log ^2 n)$。

2.若$f[0]=0, f[1]=1,f[n+1]=(f[n]+f[n-1])/2$，则随着$i$的增大，$f[i]$将接近于____。答案：$2\over 3$
解：
$$
f[n+1]+{1\over 2}f[n]=f[n]+{1\over 2}f[n-1]=f[1]+{1\over 2}f[0]=1\\
\therefore f[n+1]-{2\over 3}=-{1\over 2}(f[n]-{2\over 3})\\
\therefore f[n]-{2\over 3}=(-{1\over 2})^n\times(f[0]-{2\over 3})\\
当n\to \infty，(-{1\over 2})^n\times(f[0]-{2\over 3})\to 0\\
\therefore f[n]\to {2\over 3}
$$

（四）表达式
表达式可以根据运算先后顺序写成一棵树，叶子节点的优先级最高。我们正常的写法是中序遍历，“后缀形式”就是写成后序遍历（即把运算符写在需要运算的变量后面）

（五）排序
1.快速排序最坏情况下是$O(n^2)$的哦。
2.排序算法的稳定性：假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，r[i]=r[j]，且r[i]在r[j]之前，而在排序后的序列中，r[i]仍在r[j]之前，则称这种排序算法是稳定的；否则称为不稳定的。
堆排序、快速排序、希尔排序、直接选择排序不是稳定的排序算法，而基数排序、冒泡排序、直接插入排序、折半插入排序、归并排序是稳定的排序算法。

（六）面向对象的编程语言有：java,c++,c#等

###二、错误与反思

改错的时候发现错的有20~30分的题是会做的，太心疼了。

首先是计算问题，时间复杂度找规律的时候算错了选到了$O(n^2)$的答案；递推式只算了几个之后就猜了一个黄金分割比。请在做题的时候保持**清醒与镇定**，不要在犯这些在数学考场上都不会犯的错！！

然后是要细致，看清楚题目的询问（是全部变成0还是全部变成1），也看清楚自己算的答案，这里要要求自己草稿本上的书写尽量整洁一点；补全程序的时候看清楚题目给出的代码中，数组下标、语句的先后顺序等等；也要注意，2n-1与2n是不一样的！

总之觉得这是一个横竖都不应该得的分数，下次必须改进做题习惯。