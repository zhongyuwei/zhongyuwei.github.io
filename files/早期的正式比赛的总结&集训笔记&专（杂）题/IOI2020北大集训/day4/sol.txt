## A - xor

### 题意

给定$n,d$，求

$$
\sum_{0\le x,y,z < n }(x \oplus y\oplus z)^d \pmod {998244353}
$$

其中$\oplus$表示按位异或。

$n< 2^{30},d\le 100000$。

### Sol

#### 部分分：$d\le 10$

下面是一个和正解毫无关系的暴力。

通过数位$dp$单独对二进制每一位进行考虑。考虑怎么算答案，设$p_i$表示第$i$位是$0$还是$1$，由多项式乘法的组合意义可得：

$$
(\sum_{i=0}^{\log n} p_i 2^i)^d \\
=d!\sum_{l_1+l_2 + \cdots +l_{\log n}=d} \prod_i {(p_i2^i)^{l_i}\over l_i!}
$$

在$dp$状态中加入一维表示$l_1 + l_2  +\cdots l_{cur\_len}$，就可以在$O(\log n \cdot 2^3 \cdot d^2)$的时间内解决问题。

#### 正解

枚举$x,y,z$最高的和$n$不同的一位，假设为$a,b,c$。不失一般性地令$a\le b\le c$。$x\oplus y\oplus z$可能取到的数，满足$c$以上的位全部与$n$相同，$c$位为$0$且$n$的$c$位为$1$，$c$以下的位任意。考虑末$c$位取到某个$L\in [0,2^c)$的方案数，发现我们可以先让$x$的末$a$位、$y$的末$b$位随便取，然后根据$x,y$和$L$唯一地确定$z$的末$c$位，故而方案数为$2^{a+b}$。这也就是说，枚举完$a,b,c$之后，$x\oplus y\oplus z$的每一个可能的取值出现的方案数是一样的。所以只需要求出所有的可能取到的数的$d$次方的和就可以了。可能取到的数形成了一个连续的区间，是经典的自然数幂和问题。直接枚举$a,b,c$计算的复杂度为$O(d\log ^ 3 n)$，观察发现可取到的数形成的区间只与$\max\{ a,b,c\}$有关，所以只需要算$\log n$次自然数幂和就可以了，复杂度$O(d\log n + \log^3 n)$。

---

## B -  N门问题

### 题意

$N$扇门中有一扇门是有奖的。初始的时候$A$认为所有门有奖的概率是相等的。每一轮，$A$会在有奖概率最大的门中随机选择一扇，然后主持人会从没有被$A$选择且没有奖的所有门中随机选择一扇门打开。进行到第$N-1$轮时，$A$的选择就是他的最终选择。

现在你来当主持人，你可以决定（而不是随机地）每一次打开哪一扇没有被$A$选择且没有奖的门，问$A$最终选择的门后面有奖的概率最小是多少。假定$A$不知道你是托儿，即$A$仍然认为你是在随机选择门。

$N\le 10^{18}$

### Sol

假设在某一轮，$n$个门后面有奖且主持人做出这样的选择的概率（贝叶斯公式中的$P(B\mid A)$）分别是$p_1,p_2,\cdots p_n$。

假设$A$选择的门是$x$，而你打开的门是$y$，则：

$$
p'_x = p_x {1\over n-1} \\
p'_k = p_k {1\over n-2} (k\not =x, y) \\
$$

下面将证明，在某一轮$\forall k \not = x,y, p'_x < p'_k$。考虑归纳。对于第一轮显然成立。假设现在是第$t$轮，还剩下$n$扇门没有开。由于$p'_k(k\not=x,y)$之间的大小关系由$p_k$决定，所以只需要考虑$p_k$中的最小值$p_q$乘上$1\over n-2$与$p_x \cdot {1\over n-1}$的大小关系。而由于归纳，$p_q$在上一轮中是最大的，用$\{ p''_i\}$表示上一轮的数，则$p'_q = p''_q \cdot {1\over (n-2)(n-2)}$，而$p'_x = p''_x \cdot{ 1\over (n-3)(n-1)}$，所以可以推出。。。什么也推不出来。

不知道怎么证明的，$N>10$的时候答案为$0$，$N\le 10$的时候直接搜索。

Upd: 2020.5.6

在 ZJK 的指导下，我现在会证明题解中的 lemma 了。

Lemma: 当前这一轮被 $A$ 选择的那扇门，在这一轮之后会成为唯一的概率最小的门。

设 $P_{max}/P_{min}$ 为剩下 $n$ 个门的时候，概率最大/最小的门的概率；$P'_{max}/P'_{min}$ 为剩下 $n-1$ 个门的时候，概率最大/最小的门的概率。

考虑归纳地证明结论 $\frac{P_{max}}{P_{min}} \le \frac{n}{n-1}$ :
$$
\begin{gathered}
\left.
\begin{gathered}
\frac{P_{max}}{P_{min}} \le \frac{n}{n-1}\\
P'_{max} \le P_{max}\\
P'_{min} = P_{max} \frac{n-2}{n-1}\\
\end{gathered}
\right\}\\
\Rightarrow \frac{P'_{max}}{P'_{min}} \le \frac{P_{max}}{P'_{min}} = \frac{P_{max}}{P_{max} \frac{n-2}{n-1}} = \frac{n-1}{n-2}\\
\end{gathered}
$$
这样就能推出
$$
P_{max} \le P_{min} \frac{n}{n-1} < P_{min} \frac{n-1}{n-2}
$$
于是问题转化成，有一个序列，初始序列开头有若干个相同的元素。每次从开头随机拿一个元素，然后主持人把剩下的不是关键元素的元素扔掉一个，然后把从开头拿的元素**单独**（与已有的任何元素都不相同）放到结尾去。可以 $f_{i,j,k}$ 表示当前剩下 $i$ 个球，开头有 $j$ 个球，关键球的位置是 $k$，最后能拿到奖的概率。

然后发现（？）当 $n>10$ 的时候，主持人就有必胜策略了。所以 $n>10$ 的时候直接输出 $0$ 即可。

---

## C - 区间匹配

### 题意

有两个长度为$n$的序列$a[1\cdots n],b[1\cdots n]$和两个非负整数$la,lb(lb \le la)$，你需要求出一个$1$到$n$的排列$\{p\}$，使得对于所有$i$都有$a[i] \le b[p[i]] \le a[i] + la$，在此基础上你需要最大化满足$a[i] + lb \ge b[p[i]]$的$i$的数量，并输出最大化的结果。

$n\le 500000$，$a[i],b[i],la,lb\le 500000$，且保证存在合法的$p$。

### Sol

考虑这样的一种贪心：从右到左考虑每一个$a$的元素，确定与它匹配的$b[p[i]]$。设现在还没有匹配过的元素中，最靠右的一个是$b[x]$，以及最靠右且满足$a[i] \le b[y] \le a[i]+lb$的是$b[y]$。如果让$a[i]$匹配上$b[y]$，剩下的点仍然存在合法的匹配，则让$a[i]$匹配$b[y]$；否则让$a[i]$匹配$b[x]$。

正确性证明：假设这样得到的不是最优解，考虑最优匹配中第一个与这样求出来的匹配不同的位置$i$，如果$i$匹配的既不是$x$也不是$y$，将$i$匹配的改成$x$或者$y$，答案一定不会变劣；假设最优匹配中$i$匹配了$y$，则意味着让$i$匹配$y$之后仍然存在完备匹配，所以我们的贪心策略也会让$i$匹配$y$；而如果最优匹配中$i$匹配了$x$，我们的贪心策略让$i$匹配了$y$，设我们的贪心策略中匹配了$x$的是$q_x$（显然$q_x$对答案没有贡献），而最优策略中$q_x$匹配$z$，则有两种情况：

1. $z\le y$，则$q_x,z$这一对有可能对答案产生了贡献，此时我们将最优决策改为$x$匹配$q_x$，$i$匹配$y$，显然是不会变劣的。
2. $z> y$，则$q_x,z$这一对一定对答案没有贡献。继续考虑$q_z$和最优策略中$q_z$所匹配的$w$，若$w\le y$就改成$q_x$匹配$x$，$q_z$匹配$z$，$i$匹配$y$，答案不会变劣，因为用到的$y$的右侧的点的集合是一样的，并且用到的$y$的左侧的点（从$w$变成了$y$）没有向左移，而已经确定了的匹配的贡献也没有变小；否则，继续考虑$q_w$直到匹配的点在$y$的左侧。

直接检查是否存在完备匹配是$O(n\log n)$的（排序+贪心）。由Hall定理可得，存在完备匹配的条件是，不存在$z$使得$\sum_{i} [b[i] \ge z] > \sum_{j} [a[j] + la \ge z]$。用线段树维护每个$z$的$\sum_{i} [b[i] \ge z] - \sum_{j} [a[j] + la \ge z]$以及区间最小值，并支持区间$+1/-1$，即可在$O(n\log n)$的时间内解决问题。