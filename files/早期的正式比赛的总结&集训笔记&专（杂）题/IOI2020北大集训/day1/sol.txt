## A - 递增树列

### 题意

给定一棵有根树，定义$dis(i)$为$i$点到根经过的边数。求有多少个排列$p$，满足$\forall i \in [1,n-1), dis(lca(p_i,p_{i+1}))\le dis(lca(p_{i+1},p_{i+2}))$。

答案对$10^9+7$取模。$n\le 80$。

### Sol

一个观察：从前往后考虑这个排列，一旦出现了相邻两个点的lca不为根，那么此后的点都在根的同一个子树内。而前面的相邻两个点的lca都为根等价于相邻两个点来自根的不同子树。对不是根的点考虑仅由它的子树内的点构成的排列时也有类似的结论。

设$g_{u,j}$表示以$u$为根，用了$u$子树内的$j$个点去构成一个合法的排列的方案数。则最后的答案是$g_{1,n}$。

如果排列中始终没有出现两个相邻的点lca的深度大于$u$，则可以直接用容斥原理计算。对$u$的每一个儿子枚举这个儿子的子树内选了多少个点，以及这些点中有多少对在最终排列里相邻了，并对（选了的点数）和（在同一个儿子的子树内且在排列中相邻的点对数）做背包。

如果存在相邻点lca深度大于$u$，假设其所属的儿子是$v'$，我们最后得到的排列只需满足：在lca均在$v'$之内的那一段（即$g_{v',x}$所代表的）之前，最后一个点不属于$v'$的子树。这个仍然可以用类似于上一种情况的方法进行容斥，使得在$v'$子树内的点位于$g_{v',x}$的那段之前的方案被减掉。在背包中再加入一维$0/1$，表示是否已经算过$v'$的贡献就可以处理这种情况。

时间复杂度$O(n^4)$。~~我n^5过了~~

---

## B - Article

### 题意

定义$w(s_1,s_2)$表示$s_1,s_2$的本质不同的公共子串的数量。

定义一个字符串$t$的权值为$\sum_{i=1}^{|t|-1} w^2(s[1\cdots i],s[i+1\cdots |t|])$。

给出一个字符串$s$和正整数$k$，问将$s$划分成恰好$k$段，权值最大的那段的权值最小可以是多少。

$|S|\le 50000$，保证答案不超过$10^{18}$。

### Sol

考虑如何在$O(|t|)$的时间内算出$t$的权值：对$t$建SAM，对于每个节点处理出它的出现位置的最小值和最大值；SAM上的每个节点对$i=1$到$|t|-1$时的$w$的贡献，会是一个形如$maxlen,maxlen,\cdots maxlen,maxlen-1,maxlen-2\cdots $的数列，用二次差分就可以处理。求出每个$w$之后再平方、求和即可。

首先二分答案，将问题转化成：要求每段的权值小于等于某值，问能否划分成至多$k$段。由于这个题的权值满足单调性（即一个串的权值一定不小于它的任何一个子串），所以可以直接贪心，让划分的位置尽可能靠后就可以了。

利用倍增找下一个划分点：先检查长度$2^0,2^1,\cdots$直到长度为$2^k$的串的权值大于了限制，然后再依次枚举$2^{k-1},2^{k-2}\cdots$进行倍增。假设这一次划分的段的长度的$L$，由于每一次倍增时需要计算权值的串长度大于等于$2^{k-1}$而小于$2^k$，所以找出这个划分点的复杂度是$\Theta(L\log L)$的。

总复杂度$O(|S|\log |S|\log Ans)$。

---

## C - Travel

### 题意

有$n$个可重集合$S_1,S_2\cdots S_n$，你可以从每个可重集合中选出一个元素，然后用这$n$个元素构成$k$个环，要求每个环的长度都是奇数。

定义一个环的价值为，相邻两个元素的差的绝对值的最小值。特别地，一个只包含一个元素的环的价值是正无穷。

你需要最大化所有环的价值的最小值，并输出最大化的结果。

$n\le 300,|S_i|\le 5,k< n$。

### Sol

#### Lemma 1

对于确定的$n$个已经从小到大排好序的元素$a_1,a_2,a_3\cdots a_n$，令$m={n-1\over 2}$，则它们构成的环的价值最大值是$\min \{ a_{i+m}-a_i \}$。

证明：考虑$\{a_i,a_{i+1},\cdots a_{i+m}\}$这个集合内有$m+1$个元素，集合外有$m$个元素，所以集合中必然存在一对在环中相邻的元素，所以这是答案的下界。而达到这个下界的解可以这样构造：

![C.png](https://i.loli.net/2019/12/17/dgliqKfZzND7ROt.png)

#### Lemma 2

最终的答案是由$k-1$个孤立的点和一个长度为$n-k+1$的环构成的。

证明：考虑现在有两个长度大于$1$的环$\{a_1,a_2\cdots a_m\}$和$\{b_1,b_2\cdots b_n\}$（$a_i,b_i$随下标递增），只要证明将它们变成一个孤立点和一个环答案不会变劣就可以了。

如果某个环使用的不是上面的图片中的构造方法，将其改为图片中的构造方法不会变劣。所以下面均认为环是按照上面图片的方式构造的。

从$a$中取出一个孤立点$a_{m+1\over 2}$，得到一条一端为$a_1$，另一端为$a_m$的链。

断开$b$中的边$(b_1,b_{n+1\over 2})$或者边$(b_{n+1\over 2},b_n)$。

考虑如何将两条链拼起来。假设第一条链是的端点分别为$a,b(a< b)$，第二条链的端点为$c,d(c< d)$。若$[a,b]$与$[c,d]$没有交或者包含，则很容易构造使得拼接用的边的权值都大于等于$\min\{b-a,d-c\}$。否则一定有$b_1< a_1 \le b_{n+1\over 2} \le a_m < b_n$，此时若$b_{n+1\over 2}\ge a_{m+1\over 2}$，就连$(b_{n+1\over 2},a_1)$和$(a_m,b_1)$，否则就连$(b_{n+1\over 2},a_m)$和$(b_n,a_1)$。这样构造之后答案都不会变劣。

#### process

首先二分答案$w$，然后判断能否求出长度为$n-k+1$的哈密顿回路。

令$N=n-k+1$，存在长度为$N$的哈密顿回路等价于存在$N-3\over 2$对匹配和一个三元匹配。

其中$i,j$这两个集合可以匹配，当且仅当$\exists a\in S_i,b\in S_j, |a-b| \ge w$。

其中$i,j,k$这三个集合可以构成三元匹配，当且仅当$\forall x\in S_i,y\in S_j,z\in S_k, \min\{|x-y|,|y-z|,|z-x|\}\ge w$。

必要性：可以把环画成之前的图中的形式，图中红色的边为匹配边。

充分性：显然一个集合只会属于一个匹配。对于每个集合拿出一个它参与了匹配条件判定的那个元素，将所有集合按照它拿出的那个元素的大小排好序。如果它们的匹配边的连法不是之前的图中的那样，则可以进行等价的调整。然后用与前面构造相同的方法就可以构造出解。

最后是怎么求这个匹配。枚举三元匹配中元素的值为中位数的那个集合并枚举它选的元素，然后将这个集合拆成两个点，一个只能连比它小的点，另一个只能连比它大的点，然后跑一般图的最大匹配就可以了（说得就跟我会似的。。。。